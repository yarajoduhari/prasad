//library 'default@master'
def jobnameparts = JOB_NAME.tokenize('/') as String[]
def project_name = jobnameparts[0]
def cause = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
def userName = cause.userId[0]

pipeline {
  agent {
    kubernetes {
      yamlFile 'kubernetespod.yml'
    }
  }
  stages {
    stage('Init') {
      steps {
        script {
          // Build the jars
          git branch: 'master', url: 'https://github.com/MithunTechnologiesDevOps/maven-web-application.git'
          // word length checker  
          //branchlint()
        }
      }
    }
    stage('Maven') {
      steps {
        container('maven') {
          // Uncomment if using Maven settings
          // configFileProvider([configFile(fileId: 'nb-settings.xml', variable: 'MAVEN_SETTINGS_XML')]) {
          sh "mvn clean install -Denv=blackbox -U -DskipTests=true"
          sh "cp target/*.war ."
        } 
      }
    }
    stage('Building Docker and Pushing Image to Nexus') {
      steps {
        container('docker') {
          sh '''
            # cd devops
            # Uncomment if using Docker login
            docker login http://localhost:8082 -u admin -p admin123
            docker build -t localhost:8082/kube-test/maven:$BUILD_NUMBER -f Dockerfile .
            docker push localhost:8082/kube-test/maven:$BUILD_NUMBER
          '''
        }
      }
    }
    stage('Helm Deploying') {
      steps {
        script {
          git 'https://github.com/yarajoduhari/prasad.git'
        }
        container('helm') {
          sh '''
            # helm repo add bitnami https://charts.bitnami.com/bitnami
            # helm repo update
            # helm repo ls
            # helm install --help
            helm create sarthi-local
            mv sarthi-local/values.yaml sarthi-local/values1.yaml
            cp values.yaml sarthi-local/
            
            helm upgrade sarthi-local sarthi-local/ -n devops-tools \
              --set 'serviceAccount.create=false' \
              --set 'serviceAccount.name=default' \
              --set 'image.repository=localhost:8082/kube-sarthi/maven' \
              --set "image.tag=${BUILD_NUMBER}" \
              --set 'service.port=8080' \
              --set 'resources.limits.cpu=300m' \
              --set 'resources.limits.memory=2000Mi' \
              --set 'resources.requests.cpu=200m' \
              --set 'resources.requests.memory=1000Mi' \
              --set 'service.type=LoadBalancer' \
              --debug

            echo http://$NODE_IP:$NODE_PORT 
          '''
        }
      }
    }
  } // Closing the stages block
} // Closing the pipeline block
